/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TestDiceRoller,
  TestDiceRollerInterface,
} from "../../contracts/TestDiceRoller";

const _abi = [
  {
    inputs: [],
    name: "getRandom",
    outputs: [
      {
        internalType: "bytes32",
        name: "rnd",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610126806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063aacc5a1714602d575b600080fd5b60336047565b604051603e91906071565b60405180910390f35b60006001436054919060c3565b40905090565b6000819050919050565b606b81605a565b82525050565b6000602082019050608460008301846064565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060cc82608a565b915060d583608a565b92508282101560e55760e46094565b5b82820390509291505056fea26469706673582212207ccc0650e3659f003dd1b21363b20e1252bfcff1ea7b46022215e61a5d635f4664736f6c63430008090033";

type TestDiceRollerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestDiceRollerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestDiceRoller__factory extends ContractFactory {
  constructor(...args: TestDiceRollerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestDiceRoller> {
    return super.deploy(overrides || {}) as Promise<TestDiceRoller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestDiceRoller {
    return super.attach(address) as TestDiceRoller;
  }
  override connect(signer: Signer): TestDiceRoller__factory {
    return super.connect(signer) as TestDiceRoller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestDiceRollerInterface {
    return new utils.Interface(_abi) as TestDiceRollerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestDiceRoller {
    return new Contract(address, _abi, signerOrProvider) as TestDiceRoller;
  }
}
